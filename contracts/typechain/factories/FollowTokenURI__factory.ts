/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  FollowTokenURI,
  FollowTokenURIInterface,
} from "../FollowTokenURI";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "followTokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "followedProfileId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "originalFollowTimestamp",
        type: "uint256",
      },
    ],
    name: "getTokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x60808060405234610016576107a1908161001c8239f35b600080fdfe604060808152600436101561001357600080fd5b600090813560e01c6346b1ebc81461002a57600080fd5b346103f65760603660031901126103f6576004356100478161062e565b9261005360243561062e565b9183519062121da160e41b82526004820152818160248173__$e8efa8b79168d45cb7784ec7d7234d671e$__5af49182156103fe578092610367575b5050906102e66101376100a46102eb946104b2565b956100af815161062e565b906100bb60443561062e565b91875195869261022060209b727b226e616d65223a22466f6c6c6f776572202360681b8d8701528c6101b8845195828601966100fb8160338c018a610409565b89017f222c226465736372697074696f6e223a224c656e732050726f746f636f6c202d60338201526a20466f6c6c6f776572202360a81b605382015286519061014882605e83018b610409565b016c206f662050726f66696c65202360981b605e8201526101728251809386606b85019101610409565b01917f222c22696d616765223a22646174613a696d6167652f7376672b786d6c3b6261606b840152641cd94d8d0b60da1b608b8401528351938491609085019101610409565b01917f222c2261747472696275746573223a5b7b22646973706c61795f74797065223a60908401527f226e756d626572222c2274726169745f74797065223a224944222c2276616c7560b08401526332911d1160e11b60d084015251809360d4840190610409565b017f227d2c7b2274726169745f74797065223a22444947495453222c2276616c756560d482015262111d1160e91b60f4820152610266825180938c60f785019101610409565b017f227d2c7b22646973706c61795f74797065223a2264617465222c22747261697460f7820152610117927b2fba3cb832911d1126a4a72a22a21020aa1116113b30b63ab2911d1160211b84830152610133916102cb825180938d8685019101610409565b63227d5d7d60e01b910191820152039081018452018261042c565b6104b2565b81519061033d603d83868101937f646174613a6170706c69636174696f6e2f6a736f6e3b6261736536342c000000855261032d815180928a8686019101610409565b810103601d81018552018361042c565b6103598351948593818552519283809286015285850190610409565b601f01601f19168101030190f35b9091503d8082843e610379818461042c565b8201916020818403126103f6578051906001600160401b0382116103fa570182601f820112156103f6578051916103af83610465565b936103bc8751958661042c565b838552602084840101116103f357506100a4836103ea6102e694610137946020806102eb9a99019101610409565b9394505061008f565b80fd5b5080fd5b8280fd5b8451903d90823e3d90fd5b60005b83811061041c5750506000910152565b818101518382015260200161040c565b601f909101601f19168101906001600160401b0382119082101761044f57604052565b634e487b7160e01b600052604160045260246000fd5b6001600160401b03811161044f57601f01601f191660200190565b9061048a82610465565b610497604051918261042c565b82815280926104a8601f1991610465565b0190602036910137565b80511561060a57604051606081016001600160401b0381118282101761044f57604052604081527f4142434445464748494a4b4c4d4e4f505152535455565758595a61626364656660208201527f6768696a6b6c6d6e6f707172737475767778797a303132333435363738392b2f604082015281516002928382018092116105f4576003918290046001600160fe1b03811681036105f457610557908594951b610480565b936020850193829183518401925b8381106105a3575050505051068060011461059057600214610585575090565b603d90600019015390565b50603d9081600019820153600119015390565b85600491979293949701918251600190603f9082828260121c16880101518453828282600c1c16880101518385015382828260061c1688010151888501531685010151878201530195929190610565565b634e487b7160e01b600052601160045260246000fd5b50604051602081016001600160401b0381118282101761044f576040526000815290565b6000908072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b8082101561075d575b506904ee2d6d415b85acef8160201b8083101561074e575b50662386f26fc100008083101561073f575b506305f5e10080831015610730575b5061271080831015610721575b506064821015610711575b600a80921015610707575b6001908160216106bf828701610480565b95860101905b6106d1575b5050505090565b600019019083906f181899199a1a9b1b9c1cb0b131b232b360811b8282061a835304918215610702579190826106c5565b6106ca565b91600101916106ae565b91906064600291049101916106a3565b60049193920491019138610698565b6008919392049101913861068b565b6010919392049101913861067c565b6020919392049101913861066a565b60409350810491503861065256fea264697066735822122087a17233f18dbbbf67d52d54196e6b11394c15ab3530db0ae44042f3ea5899b564736f6c63430008150033";

type FollowTokenURIConstructorParams =
  | [linkLibraryAddresses: FollowTokenURILibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FollowTokenURIConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class FollowTokenURI__factory extends ContractFactory {
  constructor(...args: FollowTokenURIConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        FollowTokenURI__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: FollowTokenURILibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$e8efa8b79168d45cb7784ec7d7234d671e\\$__", "g"),
      linkLibraryAddresses[
        "contracts/libraries/svgs/Follow/FollowSVG.sol:FollowSVG"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<FollowTokenURI> {
    return super.deploy(overrides || {}) as Promise<FollowTokenURI>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): FollowTokenURI {
    return super.attach(address) as FollowTokenURI;
  }
  connect(signer: Signer): FollowTokenURI__factory {
    return super.connect(signer) as FollowTokenURI__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FollowTokenURIInterface {
    return new utils.Interface(_abi) as FollowTokenURIInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FollowTokenURI {
    return new Contract(address, _abi, signerOrProvider) as FollowTokenURI;
  }
}

export interface FollowTokenURILibraryAddresses {
  ["contracts/libraries/svgs/Follow/FollowSVG.sol:FollowSVG"]: string;
}

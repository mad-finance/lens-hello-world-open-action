/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { CollectNFT, CollectNFTInterface } from "../CollectNFT";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "hub",
        type: "address",
      },
      {
        internalType: "address",
        name: "actionModule",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "Initialized",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidParameter",
    type: "error",
  },
  {
    inputs: [],
    name: "NonERC721ReceiverImplementer",
    type: "error",
  },
  {
    inputs: [],
    name: "NotActionModule",
    type: "error",
  },
  {
    inputs: [],
    name: "NotOwnerOrApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "NotProfileOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "TokenDoesNotExist",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "ACTION_MODULE",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "HUB",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "exists",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDomainSeparator",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSourcePublicationPointer",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "profileId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "pubId",
        type: "uint256",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "mint",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "mintTimestampOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "signer",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "salePrice",
        type: "uint256",
      },
    ],
    name: "royaltyInfo",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "royaltiesInBasisPoints",
        type: "uint256",
      },
    ],
    name: "setRoyalty",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenDataOf",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "uint96",
            name: "mintTimestamp",
            type: "uint96",
          },
        ],
        internalType: "struct Types.TokenData",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60c0346100a257601f61171538819003918201601f19168301916001600160401b038311848410176100a75780849260409485528339810103126100a257610052602061004b836100bd565b92016100bd565b60805260a052600160ff19600e541617600e5560405161164390816100d282396080518181816105be0152610854015260a05181818161064f01528181610ad301528181610ce501526115110152f35b600080fd5b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b03821682036100a25756fe6080604052600436101561001257600080fd5b60003560e01c806301ffc9a7146101c757806306fdde03146101c2578063081812fc146101bd578063095ea7b3146101b857806318160ddd146101b357806323b872dd146101ae5780632a55205a146101a9578063397a2a88146101a45780633a755ed11461019f5780634209a2e11461019a57806342842e0e1461019557806342966c68146101905780634f558e791461018b57806350ddf35c146101865780636352211e146101815780636a6278421461017c57806370a08231146101775780637ecebe001461017257806395d89b411461016d578063a22cb46514610168578063a4c52b8614610163578063b88d4fde1461015e578063c0da9bcd14610159578063c87b56dd14610154578063e4a301161461014f578063e985e9c51461014a5763ed24911d1461014557600080fd5b610deb565b610d93565b610d47565b610c92565b610c01565b610b71565b610abd565b610a2c565b6109d5565b610998565b610954565b61082c565b61080e565b6107c6565b61079e565b61071c565b6106dc565b610616565b6105ed565b6105a8565b610544565b61051d565b6104d3565b610429565b6103e8565b610334565b6101e3565b6001600160e01b03198116036101de57565b600080fd5b346101de5760203660031901126101de57610238600435610203816101cc565b63ffffffff60e01b1663152a902d60e11b81149081156102c7575b811561023c575b5060405190151581529081906020820190565b0390f35b6380ac58cd60e01b8114915081156102b6575b81156102a5575b8115610294575b8115610283575b8115610272575b5038610225565b6301ffc9a760e01b1490503861026b565b635b5e139f60e01b81149150610264565b6393ea2f1d60e01b8114915061025d565b630852cd8d60e31b81149150610256565b63c744eb3560e01b8114915061024f565b6301ffc9a760e01b8114915061021e565b60005b8381106102eb5750506000910152565b81810151838201526020016102db565b90602091610314815180928185528580860191016102d8565b601f01601f1916010190565b9060206103319281815201906102fb565b90565b346101de5760003660031901126101de57610238610353600b54611385565b6103dc6048610363600c54611385565b92604051938491774c656e7320436f6c6c656374207c2050726f66696c65202360401b602084015261039f8151809260206038870191016102d8565b82016f202d205075626c69636174696f6e202360801b60388201526103cd82518093602087850191016102d8565b01036028810184520182610b33565b60405191829182610320565b346101de5760203660031901126101de576020610406600435610e6e565b6040516001600160a01b039091168152f35b6001600160a01b038116036101de57565b346101de5760403660031901126101de5760043561044681610418565b6024356001600160a01b038061045b83610e4d565b1680918416146104c157803314159081610492575b506104805761047e9161104d565b005b604051636d8a29e760e11b8152600490fd5b905060005260056020526104bb6104b76104b0336040600020610e36565b5460ff1690565b1590565b38610470565b604051630309cb8760e51b8152600490fd5b346101de5760003660031901126101de576020600854604051908152f35b60609060031901126101de5760043561050981610418565b9060243561051681610418565b9060443590565b346101de5761052b366104f1565b906105368233610ef3565b156104805761047e92610f7b565b346101de5760403660031901126101de576024356105606114ec565b600f549182810292818404149015171561059257604080516001600160a01b0390921682526127109092046020820152f35b634e487b7160e01b600052601160045260246000fd5b346101de5760003660031901126101de576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b346101de5760003660031901126101de57600b54600c5460408051928352602083019190915290f35b346101de5760203660031901126101de57600b546040516331a9108f60e11b815260048101919091526001600160a01b036020826024817f000000000000000000000000000000000000000000000000000000000000000085165afa9182156106d7576000926106a7575b50339116036106955761047e600435610e0e565b60405163f194fae560e01b8152600490fd5b6106c991925060203d81116106d0575b6106c18183610b33565b8101906114d7565b9038610681565b503d6106b7565b6110d5565b346101de576106ea366104f1565b60405160208101939092906001600160401b038511848610176107175761047e9460405260008452610e97565b610b02565b346101de5760203660031901126101de5760043561073a8133610ef3565b156104805761074881610e4d565b6107518261100b565b60018060a01b03169060008281938252600360205260408220600019908181540190556008540160085582825260026020528160408120556000805160206115ce8339815191528280a480f35b346101de5760203660031901126101de5760206107bc600435610ed6565b6040519015158152f35b346101de5760203660031901126101de57600435600052600260205260406000205460a01c80156107fc57602090604051908152f35b60405163677510db60e11b8152600490fd5b346101de5760203660031901126101de576020610406600435610e4d565b346101de5760203660031901126101de5760043561084981610418565b6001600160a01b03907f000000000000000000000000000000000000000000000000000000000000000082163303610942576001600d54019182600d5581169081158015610933575b6104c1576108e29082600052600360205260406000206108b3815460010190565b90556108c96108c460085460010190565b600855565b6108dd846000526002602052604060002090565b610f5c565b600082815260026020526040902080546001600160a01b03164260a01b6001600160a01b0319161790556102388260405193849360006000805160206115ce8339815191528180a482526020820190565b5061093d83610ed6565b610892565b604051632fc56e1160e21b8152600490fd5b346101de5760203660031901126101de5760043561097181610418565b6001600160a01b031680156104c15760005260036020526020604060002054604051908152f35b346101de5760203660031901126101de576004356109b581610418565b60018060a01b0316600052600a6020526020604060002054604051908152f35b346101de5760003660031901126101de576102386040516109f581610b18565b600c81526b13115394cb50d3d3131150d560a21b60208201526040519182916020835260208301906102fb565b801515036101de57565b346101de5760403660031901126101de57600435610a4981610418565b602435610a5581610a22565b6001600160a01b038216913383146104c157610a7e903360005260056020526040600020610e36565b9015159060ff1981541660ff83161790556040519081527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3160203392a3005b346101de5760003660031901126101de576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b634e487b7160e01b600052604160045260246000fd5b604081019081106001600160401b0382111761071757604052565b601f909101601f19168101906001600160401b0382119082101761071757604052565b6001600160401b03811161071757601f01601f191660200190565b346101de5760803660031901126101de57600435610b8e81610418565b602435610b9a81610418565b606435916001600160401b0383116101de57366023840112156101de57826004013591610bc683610b56565b92610bd46040519485610b33565b80845236602482870101116101de57602081600092602461047e9801838801378501015260443591610e97565b346101de5760203660031901126101de5760043560006020604051610c2581610b18565b8281520152610c3381610ed6565b156107fc576000526002602052610238604060002060405190610c5582610b18565b546001600160a01b03811680835260a09190911c60209283019081526040805192835290516001600160601b031692820192909252918291820190565b346101de5760203660031901126101de57610cb16104b7600435610ed6565b6107fc57600b54600c54604051635ad18a4b60e11b8152600481019290925260248201526000816044816001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000165afa80156106d75761023891600091610d26575b5060405191829182610320565b610d41913d8091833e610d398183610b33565b8101906111cd565b38610d19565b346101de5760403660031901126101de57600e5460ff8116610d815760ff1916600117600e556103e8600f55600435600b55602435600c55005b6040516302ed543d60e51b8152600490fd5b346101de5760403660031901126101de57602060ff610ddf600435610db781610418565b60243590610dc482610418565b6001600160a01b031660009081526005855260409020610e36565b54166040519015158152f35b346101de5760003660031901126101de576020610e0661124a565b604051908152f35b61271081116104c157600f55565b6001600160a01b0316600090815260036020526040902090565b9060018060a01b0316600052602052604060002090565b6000908152600260205260409020546001600160a01b031680156107fc5790565b610e7781610ed6565b156107fc576000908152600460205260409020546001600160a01b031690565b929190610ea48233610ef3565b156104805783610eb88383610ebd97610f7b565b611111565b15610ec457565b6040516342eac10f60e11b8152600490fd5b6000908152600260205260409020546001600160a01b0316151590565b6001600160a01b0380610f0584610e4d565b169080831690828214948515610f44575b5050508215610f2457505090565b60ff925090610f3f9160005260056020526040600020610e36565b541690565b610f519192939550610e6e565b161491388080610f16565b80546001600160a01b0319166001600160a01b03909216919091179055565b610f8483610e4d565b6001600160a01b0380831692918116839003610ff95783169283156104c157610fb8610fe492610fb38761100b565b610e1c565b8054600019019055610fc981610e1c565b600181540190556108dd856000526002602052604060002090565b6000805160206115ce833981519152600080a4565b6040516349e27cff60e01b8152600490fd5b600081815260046020526040812080546001600160a01b03191690556001600160a01b0361103883610e4d565b166000805160206115ee8339815191528280a4565b816000526004602052611064816040600020610f5c565b6001600160a01b038061107684610e4d565b169116906000805160206115ee833981519152600080a4565b908160209103126101de5751610331816101cc565b6001600160a01b039182168152911660208201526040810191909152608060608201819052610331929101906102fb565b6040513d6000823e3d90fd5b3d1561110c573d906110f282610b56565b916111006040519384610b33565b82523d6000602084013e565b606090565b92909190823b156111c457611144926020926000604051809681958294630a85bd0160e11b9a8b855233600486016110a4565b03926001600160a01b03165af160009181611194575b50611186576111676110e1565b80519081611181576040516342eac10f60e11b8152600490fd5b602001fd5b6001600160e01b0319161490565b6111b691925060203d81116111bd575b6111ae8183610b33565b81019061108f565b903861115a565b503d6111a4565b50505050600190565b6020818303126101de578051906001600160401b0382116101de570181601f820112156101de5780516111ff81610b56565b9261120d6040519485610b33565b818452602082840101116101de5761033191602080850191016102d8565b6001602060405161123b81610b18565b82815201601960f91b81522090565b73db46d1dc155634fbc732f92e853b10b288ad5a1d301480611349575b611325576040516306fdde0360e01b8152600081600481305afa9081156106d75760009161130c575b50602081519101206112f86113066112a661122b565b604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f602082019081529181019590955260608501919091524660808501523060a08501529291829060c0820190565b03601f198101835282610b33565b51902090565b61131f913d8091833e610d398183610b33565b38611290565b7fbf9544cf7d7a0338fc4f071be35409a61e51e9caef559305410ad74e16a05f2d90565b5060894614611267565b9061135d82610b56565b61136a6040519182610b33565b828152809261137b601f1991610b56565b0190602036910137565b6000908072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b808210156114b4575b506904ee2d6d415b85acef8160201b808310156114a5575b50662386f26fc1000080831015611496575b506305f5e10080831015611487575b5061271080831015611478575b506064821015611468575b600a8092101561145e575b600190816021611416828701611353565b95860101905b611428575b5050505090565b600019019083906f181899199a1a9b1b9c1cb0b131b232b360811b8282061a8353049182156114595791908261141c565b611421565b9160010191611405565b91906064600291049101916113fa565b600491939204910191386113ef565b600891939204910191386113e2565b601091939204910191386113d3565b602091939204910191386113c1565b6040935081049150386113a9565b908160209103126101de575161033181610a22565b908160209103126101de575161033181610418565b600b54604051634f558e7960e01b815260048101829052602091906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016908381602481855afa9081156106d7576000916115a0575b5015611598576040516331a9108f60e11b815260048101929092528290829060249082905afa9182156106d75760009261158257505090565b6103319250803d106106d0576106c18183610b33565b505050600090565b6115c09150843d86116115c6575b6115b88183610b33565b8101906114c2565b38611549565b503d6115ae56feddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925a26469706673582212205173958241a1f2742aefe52d1cb3d84f2c352a326916101e10f4818c760c968a64736f6c63430008150033";

type CollectNFTConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CollectNFTConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CollectNFT__factory extends ContractFactory {
  constructor(...args: CollectNFTConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    hub: string,
    actionModule: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<CollectNFT> {
    return super.deploy(
      hub,
      actionModule,
      overrides || {}
    ) as Promise<CollectNFT>;
  }
  getDeployTransaction(
    hub: string,
    actionModule: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(hub, actionModule, overrides || {});
  }
  attach(address: string): CollectNFT {
    return super.attach(address) as CollectNFT;
  }
  connect(signer: Signer): CollectNFT__factory {
    return super.connect(signer) as CollectNFT__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CollectNFTInterface {
    return new utils.Interface(_abi) as CollectNFTInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CollectNFT {
    return new Contract(address, _abi, signerOrProvider) as CollectNFT;
  }
}

/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  TokenHandleRegistry,
  TokenHandleRegistryInterface,
} from "../TokenHandleRegistry";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "lensHub",
        type: "address",
      },
      {
        internalType: "address",
        name: "lensHandles",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "DoesNotExist",
    type: "error",
  },
  {
    inputs: [],
    name: "DoesNotHavePermissions",
    type: "error",
  },
  {
    inputs: [],
    name: "HandleAndTokenNotInSameWallet",
    type: "error",
  },
  {
    inputs: [],
    name: "NotHandleNorTokenOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "NotLinked",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyLensHub",
    type: "error",
  },
  {
    inputs: [],
    name: "SignatureExpired",
    type: "error",
  },
  {
    inputs: [],
    name: "SignatureInvalid",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "collection",
            type: "address",
          },
        ],
        indexed: false,
        internalType: "struct RegistryTypes.Handle",
        name: "handle",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "collection",
            type: "address",
          },
        ],
        indexed: false,
        internalType: "struct RegistryTypes.Token",
        name: "token",
        type: "tuple",
      },
      {
        indexed: false,
        internalType: "address",
        name: "transactionExecutor",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "HandleLinked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "collection",
            type: "address",
          },
        ],
        indexed: false,
        internalType: "struct RegistryTypes.Handle",
        name: "handle",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "collection",
            type: "address",
          },
        ],
        indexed: false,
        internalType: "struct RegistryTypes.Token",
        name: "token",
        type: "tuple",
      },
      {
        indexed: false,
        internalType: "address",
        name: "transactionExecutor",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "HandleUnlinked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "signer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "NonceUpdated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "profileId",
        type: "uint256",
      },
    ],
    name: "getDefaultHandle",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "increment",
        type: "uint8",
      },
    ],
    name: "incrementNonce",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "handleId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "profileId",
        type: "uint256",
      },
    ],
    name: "link",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "handleId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "profileId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "address",
            name: "signer",
            type: "address",
          },
          {
            internalType: "uint8",
            name: "v",
            type: "uint8",
          },
          {
            internalType: "bytes32",
            name: "r",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "s",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
        ],
        internalType: "struct Types.EIP712Signature",
        name: "signature",
        type: "tuple",
      },
    ],
    name: "linkWithSig",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "handleId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "profileId",
        type: "uint256",
      },
    ],
    name: "migrationLink",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "signer",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "handleId",
        type: "uint256",
      },
    ],
    name: "resolve",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "handleId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "profileId",
        type: "uint256",
      },
    ],
    name: "unlink",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "handleId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "profileId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "address",
            name: "signer",
            type: "address",
          },
          {
            internalType: "uint8",
            name: "v",
            type: "uint8",
          },
          {
            internalType: "bytes32",
            name: "r",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "s",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
        ],
        internalType: "struct Types.EIP712Signature",
        name: "signature",
        type: "tuple",
      },
    ],
    name: "unlinkWithSig",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60c0346100b857601f61148238819003918201601f19168301916001600160401b038311848410176100bd5780849260409485528339810103126100b857610052602061004b836100d3565b92016100d3565b9060805260a05260405161139a90816100e8823960805181818160c90152818161064f01528181610db701528181610eab0152818161105c0152611117015260a0518181816101210152818161068c01528181610ca401528181610fc2015261119f0152f35b600080fd5b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b03821682036100b85756fe6040608081526004908136101561001557600080fd5b6000803560e01c80630c65b39d146104df578063365ae23a146104745780634f896d4f146104555780637e502fe0146103cf5780637ecebe0014610395578063825ab164146102f457806386cf48e7146102d8578063b418a9a3146100ab5763e524488d1461008357600080fd5b346100a85760203660031901126100a857506100a1602092356110ef565b9051908152f35b80fd5b509190346102d4576100bc366104f8565b91909260018060a01b03807f000000000000000000000000000000000000000000000000000000000000000016918233036102c65750928260016101f99360c0966000805160206113458339815191529896519661011988610537565b8752602091817f0000000000000000000000000000000000000000000000000000000000000000168389015284519561015187610537565b86528286015261016087611273565b8a52898252610170848b20610c47565b818382015116158015906102bc575b610267575b5061018e87611273565b8a5289825261019f85858c206111f9565b6101a885611273565b8a528282526101b8848b20610c47565b9082820151161580159061025d575b610209575b506101d684611273565b8952526101e5848289206111f9565b6101f181518095611229565b830190611229565b8360808201524260a0820152a180f35b878161022360008051602061130583398151915293611273565b8c528b84528b85878220828155015561023e86518092611229565b61024a86820188611229565b8b60808201524260a0820152a1386101cc565b50805115156101c7565b888161028160008051602061130583398151915293611273565b8d528585528c8688822082815501556102a98751916102a0838d611229565b88830190611229565b8c60808201524260a0820152a138610184565b508051151561017f565b8351636434956760e11b8152fd5b8280fd5b50346100a8576102f16102ea366104f8565b3391610625565b80f35b509034610391576102f19061038661038b61038161031136610513565b928391959296610328610323846105c1565b6112b9565b8151908960208301937f522390ab76480f0999ffb82513c98685f2e6283b0310df98ea58db88599c8a8885528301528860608301526080820152608084013560a082015260a0815261037981610568565b519020610b8a565b61098f565b6105c1565b91610c6e565b5080fd5b5091346102d45760203660031901126102d457356001600160a01b038116908190036102d457828291602094526002845220549051908152f35b509034610391576102f19061038661044f6103816103ec36610513565b9283919592966103fe610323846105c1565b8151908960208301937fa570a87d8fed08bdf169783292bc926ecada12c9d81e3b1978b73eedbc05ecdf85528301528860608301526080820152608084013560a082015260a0815261037981610568565b91610625565b50346100a85760203660031901126100a857506100a160209235610f9a565b5091346102d45760203660031901126102d4573560ff81168091036102d4576104cd600080516020611325833981519152913385526002602052838520546104bc828261095e565b33875260026020528587205561095e565b9180519283524260208401523392a280f35b50346100a8576102f16104f1366104f8565b3391610c6e565b604090600319011261050e576004359060243590565b600080fd5b60e060031982011261050e576004359160a060243592604319011261050e57604490565b604081019081106001600160401b0382111761055257604052565b634e487b7160e01b600052604160045260246000fd5b60c081019081106001600160401b0382111761055257604052565b608081019081106001600160401b0382111761055257604052565b601f909101601f19168101906001600160401b0382119082101761055257604052565b356001600160a01b038116810361050e5790565b9081602091031261050e57516001600160a01b038116810361050e5790565b9081602091031261050e5751801515810361050e5790565b9081526001600160a01b03909116602082015260400190565b604080516331a9108f60e11b808252600482018590529195949392916020916001600160a01b03917f00000000000000000000000000000000000000000000000000000000000000008316918481602481865afa9081156108e957600091610941575b50837f000000000000000000000000000000000000000000000000000000000000000016918a519081528660048201528581602481865afa918215610936578591600093610905575b508116911681036108f457838816141580610883575b610872579288926001926107ce96956000805160206113458339815191529a9b519661071288610537565b87528387015284519761072489610537565b88528288015261073385611273565b6000526000825261074684600020610c47565b81838201511615801590610868575b610823575b5061076485611273565b6000526000825261077887856000206111f9565b61078187611273565b60005282825261079384600020610c47565b90828201511615801590610819575b6107d3575b506107b186611273565b600052526107c282826000206111f9565b51938493429285611241565b0390a1565b610810816107ef60008051602061130583398151915293611273565b60005260008452600085878220828155015585519182918b8b429285611241565b0390a1386107a7565b50805115156107a2565b61085f8161083f60008051602061130583398151915293611273565b600052858552600086888220828155015586519182918c42918b85611241565b0390a13861075a565b5080511515610755565b8851633f3c311960e01b8152600490fd5b508851633f1a0f0f60e11b81528481806108a18b8b6004840161060c565b0381865afa9081156108e9576000916108bc575b50156106e7565b6108dc9150853d87116108e2575b6108d4818361059e565b8101906105f4565b386108b5565b503d6108ca565b8a513d6000823e3d90fd5b895163ac9e9f5360e01b8152600490fd5b8291935061092890883d8a1161092f575b610920818361059e565b8101906105d5565b92906106d1565b503d610916565b8b513d6000823e3d90fd5b6109589150853d871161092f57610920818361059e565b38610688565b9190820180921161096b57565b634e487b7160e01b600052601160045260246000fd5b3560ff8116810361050e5790565b60808201354211610b78576109a3826105c1565b3b15610ae057604091602090816109bb818301610981565b91855192868201358385015260608201358785015260ff60f81b9060f81b166060840152604183526109ec83610583565b6001600160a01b03906109fe906105c1565b16918551928391630b135d3f60e11b96878452600484015287602484015280519081604485015260005b828110610ac857505060648382600083839584010152601f801991011681010301915afa918215610abd57600092610a7f575b50506001600160e01b03191603610a6f5750565b516337e8456b60e01b8152600490fd5b81813d8311610ab6575b610a93818361059e565b810103126103915751906001600160e01b0319821682036100a857503880610a5b565b503d610a89565b84513d6000823e3d90fd5b81810186015187820160640152879587955001610a28565b6000608060209260ff610af4858701610981565b6040519283521684820152604085013560408201526060850135606082015282805260015afa15610b6c576000516001600160a01b039081168015929091908315610b55575b505050610b4357565b6040516337e8456b60e01b8152600490fd5b610b61919293506105c1565b161415388080610b3a565b6040513d6000823e3d90fd5b604051630819bdcd60e01b8152600490fd5b60016020604051610b9a81610537565b82815201603160f81b81522060405160208101917f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f83527f52245766a3f260c9ab6fe797ca381ff8eefec025b057d2d73da990608e357c3f604083015260608201524660808201523060a082015260a08152610c1581610568565b5190209060405190602082019261190160f01b84526022830152604282015260428152610c4181610583565b51902090565b90604051610c5481610537565b825481526001909201546001600160a01b03166020830152565b92919083158015610f92575b610f805760408051634f558e7960e01b808252600480830188905260209290916001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811692918583602481875afa928315610e8b57600093610f61575b5082610f0c575b82610e96575b5081610da3575b50610d9457835197610d0389610537565b885282880152610d1287611273565b60005260008252610d2583600020610c47565b93845103610d865750946107ce9160016000805160206113058339815191529697610d4f84611273565b600052600081526000828482208281550155610d6a86611273565b6000525260006001828220828155015551938493429285611241565b8251632d9523d760e11b8152fd5b5082516351d5161360e01b8152fd5b85516331a9108f60e11b81528481018890527f000000000000000000000000000000000000000000000000000000000000000082169250908582602481865afa918215610e8b57600092610e6c575b50808916911614159081610e08575b5038610cf2565b8551633f1a0f0f60e11b81529150849082908180610e298c8c8a840161060c565b03915afa908115610e6157600091610e44575b501538610e01565b610e5b9150843d86116108e2576108d4818361059e565b38610e3c565b85513d6000823e3d90fd5b610e84919250863d881161092f57610920818361059e565b9038610df2565b87513d6000823e3d90fd5b909150855190815286848201528481602481857f0000000000000000000000000000000000000000000000000000000000000000165afa908115610f0157600091610ee4575b509038610ceb565b610efb9150853d87116108e2576108d4818361059e565b38610edc565b86513d6000823e3d90fd5b915085516331a9108f60e11b81528a858201528581602481875afa908115610e8b57600091610f44575b508116888216141591610ce5565b610f5b9150863d881161092f57610920818361059e565b38610f36565b610f79919350863d88116108e2576108d4818361059e565b9138610cde565b60405163b0ce759160e01b8152600490fd5b508015610c7a565b60408051634f558e7960e01b808252600482018490526020939092916001600160a01b0391907f00000000000000000000000000000000000000000000000000000000000000008316908681602481855afa908115610e61576000916110d2575b50156110c1579061101d9184519161101283610537565b825286820152611273565b600052600084528160002054938415938415611045575b5050505061103f5790565b50600090565b8394506024829394518095819382528860048301527f0000000000000000000000000000000000000000000000000000000000000000165afa9283156110b7575060009261109a575b50501538808080611034565b6110b09250803d106108e2576108d4818361059e565b388061108e565b513d6000823e3d90fd5b835163b0ce759160e01b8152600490fd5b6110e99150873d89116108e2576108d4818361059e565b38610ffb565b60408051634f558e7960e01b808252600482018490526020939092916001600160a01b0391907f00000000000000000000000000000000000000000000000000000000000000008316908681602481855afa908115610e61576000916111dc575b50156110c157906111679184519161101283610537565b600052600184528160002054938415938415611188575050505061103f5790565b8394506024829394518095819382528860048301527f0000000000000000000000000000000000000000000000000000000000000000165afa9283156110b7575060009261109a5750501538808080611034565b6111f39150873d89116108e2576108d4818361059e565b38611150565b8151815560209091015160019190910180546001600160a01b0319166001600160a01b0392909216919091179055565b805182526020908101516001600160a01b0316910152565b9094939261126360a0936112598460c0810199611229565b6040840190611229565b600180841b031660808201520152565b6020818101519151604080516001600160a01b0390941692840192835283810191909152825290606081018181106001600160401b038211176105525760405251902090565b6001600160a01b0316600081815260026020526040902080546001810191829055919080831161096b576040600080516020611325833981519152918151908152426020820152a29056fec5b450c435c821270ac9ca0c97936e8b0a38575bb06b6250cbf5be0c3f44daa3c906270cebe7667882104effe64262a73c422ab9176a111e05ea837b021065fcc33717b10968a153b6fa59edb9356cc86846bd3be6f416f4410338e25bb28d3ca2646970667358221220c1d3bc08741e155c54cf23c58bbf1d0564c6d31a1a8f53745d6f3506297ec19964736f6c63430008150033";

type TokenHandleRegistryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TokenHandleRegistryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TokenHandleRegistry__factory extends ContractFactory {
  constructor(...args: TokenHandleRegistryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    lensHub: string,
    lensHandles: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TokenHandleRegistry> {
    return super.deploy(
      lensHub,
      lensHandles,
      overrides || {}
    ) as Promise<TokenHandleRegistry>;
  }
  getDeployTransaction(
    lensHub: string,
    lensHandles: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(lensHub, lensHandles, overrides || {});
  }
  attach(address: string): TokenHandleRegistry {
    return super.attach(address) as TokenHandleRegistry;
  }
  connect(signer: Signer): TokenHandleRegistry__factory {
    return super.connect(signer) as TokenHandleRegistry__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TokenHandleRegistryInterface {
    return new utils.Interface(_abi) as TokenHandleRegistryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TokenHandleRegistry {
    return new Contract(address, _abi, signerOrProvider) as TokenHandleRegistry;
  }
}

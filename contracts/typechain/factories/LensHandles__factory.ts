/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BigNumberish,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { LensHandles, LensHandlesInterface } from "../LensHandles";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "lensHub",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenGuardianCooldown",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AlreadyEnabled",
    type: "error",
  },
  {
    inputs: [],
    name: "DisablingAlreadyTriggered",
    type: "error",
  },
  {
    inputs: [],
    name: "DoesNotExist",
    type: "error",
  },
  {
    inputs: [],
    name: "GuardianEnabled",
    type: "error",
  },
  {
    inputs: [],
    name: "HandleContainsInvalidCharacters",
    type: "error",
  },
  {
    inputs: [],
    name: "HandleFirstCharInvalid",
    type: "error",
  },
  {
    inputs: [],
    name: "HandleLengthInvalid",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidParameter",
    type: "error",
  },
  {
    inputs: [],
    name: "NotEOA",
    type: "error",
  },
  {
    inputs: [],
    name: "NotHub",
    type: "error",
  },
  {
    inputs: [],
    name: "NotOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "NotOwnerNorWhitelisted",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyOwnerOrHub",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "fromTokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "toTokenId",
        type: "uint256",
      },
    ],
    name: "BatchMetadataUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "handle",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "namespace",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "handleId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "HandleMinted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bool",
        name: "enabled",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenGuardianDisablingTimestamp",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "TokenGuardianStateChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "DANGER__disableTokenGuardian",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "LENS_HUB",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "NAMESPACE",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "NAMESPACE_HASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "OWNER",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "TOKEN_GUARDIAN_COOLDOWN",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "enableTokenGuardian",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "exists",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getHandle",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getHandleTokenURIContract",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getLocalName",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getNamespace",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "getNamespaceHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "wallet",
        type: "address",
      },
    ],
    name: "getTokenGuardianDisablingTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "localName",
        type: "string",
      },
    ],
    name: "getTokenId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "string",
        name: "localName",
        type: "string",
      },
    ],
    name: "migrateHandle",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "string",
        name: "localName",
        type: "string",
      },
    ],
    name: "mintHandle",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "salePrice",
        type: "uint256",
      },
    ],
    name: "royaltyInfo",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "handleTokenURIContract",
        type: "address",
      },
    ],
    name: "setHandleTokenURIContract",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "royaltiesInBasisPoints",
        type: "uint256",
      },
    ],
    name: "setRoyalty",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x61010034620003c857601f90601f19906001600160401b036200231c3881900385810185168401919083831185841017620003cd57808592606094604052833981010312620003c857620000538262000403565b9160209260406200006685840162000403565b9201519462000074620003e3565b9060009788835262000085620003e3565b8981528351878111620002d1578a54946001958681811c91168015620003bd575b8b821014620003a95790818584931162000353575b508a908d868411600114620002f15792620002e5575b5050600019600383901b1c191690851b178a555b805192878411620002d15784548581811c91168015620002c6575b8a821014620002b25790818486959493116200025b575b5089928411600114620001fa57508a92620001ee575b5050600019600383901b1c191690821b1790555b60805260a05260405190604082019082821090821117620001da57636c656e7360e01b939450604052600481520152600460c05260e052604051611f0390816200041982396080518181816101fd01528181610c2301528181610f59015261100a015260a051818181610341015281816107c6015281816108d10152610cd8015260c05181505060e0518181816106560152610dfc0152f35b634e487b7160e01b85526041600452602485fd5b0151905038806200012d565b858c52898c20869590939291168c5b8b8282106200024457505084116200022a575b505050811b01905562000141565b015160001960f88460031b161c191690553880806200021c565b838501518655889790950194938401930162000209565b9091929350858c52898c208480870160051c8201928c8810620002a8575b9187968992969594930160051c01915b8281106200029957505062000117565b8e815587965088910162000289565b9250819262000279565b634e487b7160e01b8c52602260045260248cfd5b90607f169062000100565b634e487b7160e01b8b52604160045260248bfd5b015190503880620000d1565b9190878995168380528d80852094905b8282106200033b575050841162000321575b505050811b018a55620000e5565b015160001960f88460031b161c1916905538808062000313565b8385015186558b979095019493840193018e62000301565b9091508c80528a8d208580850160051c8201928d86106200039f575b859493910160051c9091019088908f5b8382106200039057505050620000bb565b81558594508991018f6200037f565b925081926200036f565b634e487b7160e01b8d52602260045260248dfd5b90607f1690620000a6565b600080fd5b634e487b7160e01b600052604160045260246000fd5b60405190602082016001600160401b03811183821017620003cd57604052565b51906001600160a01b0382168203620003c85756fe608060408181526004918236101561001657600080fd5b600092833560e01c91826301ffc9a71461124157508163051fb2181461063957816306fdde03146111f5578163081812fc146111d5578163095ea7b314611039578163117803e314610ff557816318160ddd14610fd65781631d648cdb14610f335781631e7663bc14610ee15781631e9df67314610e655781632248f76d14610dba57816323b872dd14610d9057816327ac4b7014610a4d5781632a55205a14610ca557816335eb3cb914610c7c5781634209a2e114610c0b57816342842e0e14610bbc57816342966c6814610a6b57816344ba1fca14610a4d5781634985e50414610a195781634f558e79146109f05781635993bc26146108bc5781636352211e1461088b57816370a08231146107f55781637bb9c89b146107b157816395d89b411461076f578163a22cb46514610679578163a88fae831461063e578163b16f1eef14610639578163b88d4fde146105d2578163c87b56dd14610496578163e985e9c514610448578163ec81d194146103c0578163f08e8f5e146101e0575063f3bc61f1146101a657600080fd5b346101dc5760203660031901126101dc5760209181906001600160a01b036101cc6113e3565b1681526006845220549051908152f35b5080fd5b8284346103bd576101f03661147b565b94909260018060a01b03807f0000000000000000000000000000000000000000000000000000000000000000163314159081610322575b506103135761023736878661140f565b80519182158015610309575b6102f9578151156102e6576020820151605f60f81b916001600160f81b031991821683146102d6575b848110610288576020896102818c8b8b611aff565b9051908152f35b61029d826102968387611dbc565b5116611de3565b15806102c0575b6102b05760010161026c565b8851630bb7f19b60e21b81528690fd5b5082826102cd8387611dbc565b511614156102a4565b8851632f2c22a760e11b81528690fd5b634e487b7160e01b815260328452602490fd5b8651633eb64ab360e01b81528490fd5b50601a8311610243565b508351635092902f60e01b8152fd5b8651635782ee9160e11b815233858201529150602090829060249082907f0000000000000000000000000000000000000000000000000000000000000000165afa9081156103b3578291610379575b501587610227565b90506020813d82116103ab575b816103936020938361130f565b810103126101dc575180151581036101dc5787610371565b3d9150610386565b86513d84823e3d90fd5b80fd5b839150346101dc57602091826003193601126103bd57506103e46104449135611aa1565b9261043560226103f261134d565b8351968161040989935180928a808701910161139b565b820160bd60f61b88820152610426825180938a878501910161139b565b0103600281018752018561130f565b519282849384528301906113be565b0390f35b5050346101dc57806003193601126101dc5760ff816020936104686113e3565b6104706113f9565b6001600160a01b0391821683526005875283832091168252855220549151911615158152f35b919050346105c3576020918360031984813601126101dc578261050e93356104c56104c08261185c565b6114d8565b60018060a01b03600a5416918185526009885261051d878620946104e761134d565b89519889978896879663a11f868360e01b88528701526060602487015260648601906119d2565b918483030160448501526113be565b03915afa9384156105c7578094610544575b505061044490519282849384528301906113be565b909193503d8082843e610557818461130f565b82019183818403126101dc578051906001600160401b0382116105c3570182601f820112156101dc5780519161058c83611332565b936105998751958661130f565b8385528584840101116103bd575082916105bb9185806104449601910161139b565b92903861052f565b8280fd5b8251903d90823e3d90fd5b8390346101dc5760803660031901126101dc576105ed6113e3565b6105f56113f9565b906064356001600160401b038111610635573660238201121561063557610632938160246106289336930135910161140f565b91604435916115ce565b80f35b8480fd5b61136d565b5050346101dc57816003193601126101dc57602090517f00000000000000000000000000000000000000000000000000000000000000008152f35b919050346105c357806003193601126105c3576106946113e3565b90602435918215159283810361076b578061075c575b61074c576001600160a01b03169233841461070e5750338452600560205280842083855260205280842060ff1981541660ff8416179055519081527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3160203392a380f35b6020606492519162461bcd60e51b8352820152601960248201527822a9219b99189d1030b8383937bb32903a379031b0b63632b960391b6044820152fd5b8151638043dfaf60e01b81528490fd5b5061076633611e30565b6106aa565b8580fd5b5050346101dc57816003193601126101dc57805161044491610790826112de565b6002825261098960f31b6020830152519182916020835260208301906113be565b5050346101dc57816003193601126101dc57517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b839150346101dc5760203660031901126101dc576001600160a01b036108196113e3565b169081156108365760208480858581526003845220549051908152f35b608490602085519162461bcd60e51b8352820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b6064820152fd5b8284346103bd5760203660031901126103bd57506108ab6020923561151f565b90516001600160a01b039091168152f35b8284346103bd576108cc3661147b565b9490927f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031633036109e15761090a36878661140f565b90815191821580156109d7575b6102f9578051156109c4576020810151602d60f81b926001600160f81b03199182168481149081156109b6575b506102d6575b84811061095f576020896102818c8b8b611aff565b61096d826102968386611dbc565b15806109a0575b80610986575b6102b05760010161094a565b50605f60f81b826109978386611dbc565b5116141561097a565b5083826109ad8386611dbc565b51161415610974565b605f60f81b1490508b610944565b634e487b7160e01b825260328452602482fd5b50601a8311610917565b5083516313bd2e8360e31b8152fd5b8284346103bd5760203660031901126103bd5750610a106020923561185c565b90519015158152f35b8284346103bd5760203660031901126103bd5750610a3a6104449235611aa1565b90519182916020835260208301906113be565b5050346101dc57816003193601126101dc5761044490610a3a61134d565b8383346101dc57602090816003193601126105c35783356001600160a01b0380610a948361151f565b163303610bac57600854908115610b9957600019918201600855610ab78361151f565b81811615159081610b89575b50610b79579085968692610ad68561151f565b85855291875285842080546001600160a01b031990811690915591168084526003875285842080549093019092558383526002865284832080549091169055600080516020611e8e8339815191528280a460098252822090610b388254611998565b9081610b4357505050f35b8390601f8311600114610b57575050505580f35b8382528120929091610b7490601f0160051c840160018501611a67565b555580f35b8351638043dfaf60e01b81528790fd5b610b939150611e30565b88610ac3565b634e487b7160e01b865260118752602486fd5b82516330cd747160e01b81528690fd5b8383346101dc57610bcc36611446565b83519390929060208501906001600160401b03821186831017610bf857610632969750528584526115ce565b634e487b7160e01b875260418852602487fd5b9050346105c35760203660031901126105c3578035917f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03163303610c6f576127108311610c6257505060075580f35b51630309cb8760e51b8152fd5b51635fc483c560e01b8152fd5b5050346101dc57816003193601126101dc57600a5490516001600160a01b039091168152602090f35b8284346103bd57816003193601126103bd578151631d8cf42560e11b815290602435906001600160a01b039060208487817f000000000000000000000000000000000000000000000000000000000000000086165afa938415610d84578194610d44575b5060075492838102938185041490151715610d31575083519216825261271090046020820152f35b634e487b7160e01b815260118652602490fd5b9093506020813d8211610d7c575b81610d5f6020938361130f565b81010312610d7857518181168103610d78579286610d09565b8380fd5b3d9150610d52565b508451903d90823e3d90fd5b83346103bd57610632610da236611446565b91610db5610db08433611669565b61156c565b611731565b9050346105c357826003193601126105c357333b610e5757338352600660205281832054600101610e4957508190600080516020611eae833981519152610e377f0000000000000000000000000000000000000000000000000000000000000000610e258142611a7e565b33865260066020528486205542611a7e565b9180519283524260208401523392a380f35b905163a78da0a160e01b8152fd5b9051635d04968b60e11b8152fd5b919050346105c357826003193601126105c357333b610ed457338352600660205260001991828285205414610ec6575090600080516020611eae8339815191526001923385526006602052828186205580519283524260208401523392a380f35b9051637952fbad60e11b8152fd5b51635d04968b60e11b8152fd5b8284346103bd5760203660031901126103bd578235906001600160401b0382116103bd57366023830112156103bd5750602092816024610f269336930135910161140f565b8281519101209051908152f35b8383346101dc5760203660031901126101dc57610f4e6113e3565b6001600160a01b03907f000000000000000000000000000000000000000000000000000000000000000082163303610fc6577f6bd5c950a8d8df17f772f5af37cb3655737899cbf903264b9795592da439661c9394501660018060a01b0319600a541617600a5580518381526000196020820152a180f35b8251635fc483c560e01b81528590fd5b5050346101dc57816003193601126101dc576020906008549051908152f35b5050346101dc57816003193601126101dc57517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b9050346105c357816003193601126105c3576110536113e3565b602435926001600160a01b0391821692831515806111be575b6111b0578261107a8661151f565b1680851461116357803314908115611144575b50156110dc57848652602052842080546001600160a01b031916831790556110b48361151f565b167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258480a480f35b6020608492519162461bcd60e51b8352820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c0000006064820152fd5b90508652600560205281862033875260205260ff82872054163861108d565b506020608492519162461bcd60e51b8352820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b6064820152fd5b9051638043dfaf60e01b8152fd5b506111d06111cb8661151f565b611e30565b61106c565b8284346103bd5760203660031901126103bd57506108ab60209235611545565b5050346101dc57816003193601126101dc57805161044491611216826112de565b600c82526b4c656e732048616e646c657360a01b6020830152519182916020835260208301906113be565b8491346105c35760203660031901126105c3573563ffffffff60e01b81168091036105c357602092506380ac58cd60e01b81149081156112cd575b81156112bc575b8115611291575b5015158152f35b63152a902d60e11b8114915081156112ab575b508361128a565b6301ffc9a760e01b149050836112a4565b6301ffc9a760e01b81149150611283565b635b5e139f60e01b8114915061127c565b604081019081106001600160401b038211176112f957604052565b634e487b7160e01b600052604160045260246000fd5b601f909101601f19168101906001600160401b038211908210176112f957604052565b6001600160401b0381116112f957601f01601f191660200190565b6040519061135a826112de565b60048252636c656e7360e01b6020830152565b3461139657600036600319011261139657602061138861134d565b818151910120604051908152f35b600080fd5b60005b8381106113ae5750506000910152565b818101518382015260200161139e565b906020916113d78151809281855285808601910161139b565b601f01601f1916010190565b600435906001600160a01b038216820361139657565b602435906001600160a01b038216820361139657565b92919261141b82611332565b91611429604051938461130f565b829481845281830111611396578281602093846000960137010152565b6060906003190112611396576001600160a01b0390600435828116810361139657916024359081168103611396579060443590565b6040600319820112611396576004356001600160a01b038116810361139657916001600160401b03916024359083821161139657806023830112156113965781600401359384116113965760248483010111611396576024019190565b156114df57565b60405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b6044820152606490fd5b6000908152600260205260409020546001600160a01b03166115428115156114d8565b90565b6115516104c08261185c565b6000908152600460205260409020546001600160a01b031690565b1561157357565b60405162461bcd60e51b815260206004820152602d60248201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560448201526c1c881bdc88185c1c1c9bdd9959609a1b6064820152608490fd5b906115f29392916115e2610db08433611669565b6115ed838383611731565b611879565b156115f957565b60405162461bcd60e51b81528061161260048201611616565b0390fd5b60809060208152603260208201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b60608201520190565b906001600160a01b03808061167d8461151f565b169316918383149384156116b0575b50831561169a575b50505090565b6116a691929350611545565b1614388080611694565b909350600052600560205260406000208260005260205260ff60406000205416923861168c565b156116de57565b60405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b6064820152608490fd5b9061175761173e8461151f565b6001600160a01b038481169390928392831685146116d7565b1692831561180b5782151590816117fb575b506117e957816117839161177c8661151f565b16146116d7565b600080516020611e8e833981519152600084815260046020526040812060018060a01b03199081815416905583825260036020526040822060001981540190558482526040822060018154019055858252600260205284604083209182541617905580a4565b604051638043dfaf60e01b8152600490fd5b6118059150611e30565b38611769565b60405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608490fd5b6000908152600260205260409020546001600160a01b0316151590565b9293919290803b1561198e576118cd9460018060a01b039460405192839187630a85bd0160e11b9687855233600486015216602484015260448301526080606483015281806020998a9560848301906113be565b03916000988991165af184918161194e575b5061193d575050503d600014611935573d6118f981611332565b90611907604051928361130f565b81528091833d92013e5b805191826119325760405162461bcd60e51b81528061161260048201611616565b01fd5b506060611911565b6001600160e01b0319161492509050565b9091508581813d8311611987575b611966818361130f565b8101031261063557516001600160e01b0319811681036106355790386118df565b503d61195c565b5050915050600190565b90600182811c921680156119c8575b60208310146119b257565b634e487b7160e01b600052602260045260246000fd5b91607f16916119a7565b8054600093926119e182611998565b918282526020936001918281169081600014611a485750600114611a07575b5050505050565b90939495506000929192528360002092846000945b838610611a3457505050500101903880808080611a00565b805485870183015294019385908201611a1c565b60ff19168685015250505090151560051b010191503880808080611a00565b818110611a72575050565b60008155600101611a67565b91908201809211611a8b57565b634e487b7160e01b600052601160045260246000fd5b806000526009602052611ac1611ac86040600020604051928380926119d2565b038261130f565b5115611aed576000526009602052611ac16115426040600020604051928380926119d2565b60405163b0ce759160e01b8152600490fd5b909291611b0d36828661140f565b938451602080960120926008549060001990818314611a8b5760019283016008556001600160a01b0316918215611d2e57611b50611b4a8761185c565b15611d71565b611b5c611b4a8761185c565b600083815260038952604080822080548401905587825260028a52812080546001600160a01b0319168517905591868484600080516020611e8e8339815191528180a46009895260408320916001600160401b038711611d1a57611bc08354611998565b601f8111611ce1575b5083601f8811600114611c6a579260c0928880600080516020611e6e8339815191529b9c9d948897611c479993611c5f575b501b918a60031b1c19161790555b86611c1261134d565b9360405198899860a08a528160a08b0152858a0137838289010152601f801991011686019082878303019087015201906113be565b9085604084015260608301524260808301520390a190565b8b0135925038611bfb565b8385528a85209192601f198916865b818110611ccc575092611c4796959260c095928b600080516020611e6e8339815191529d9e9f9610611cb4575b50505088811b019055611c09565b60f88c60031b161c19908a0135169055388080611ca6565b89840135855593850193928d01928d01611c79565b611d0a908486528b8620601f8a0160051c8101918d8b10611d10575b601f0160051c0190611a67565b38611bc9565b9091508190611cfd565b634e487b7160e01b84526041600452602484fd5b6064886040519062461bcd60e51b825280600483015260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152fd5b15611d7857565b60405162461bcd60e51b815260206004820152601c60248201527b115490cdcc8c4e881d1bdad95b88185b1c9958591e481b5a5b9d195960221b6044820152606490fd5b908151811015611dcd570160200190565b634e487b7160e01b600052603260045260246000fd5b60ff60f81b16600360fc1b8110159081611e21575b8115611e02575090565b606160f81b811015915081611e15575090565b603d60f91b1015905090565b603960f81b8111159150611df8565b803b159081611e3d575090565b6001600160a01b0316600090815260066020526040902054600019811491508115611e66575090565b905042109056fe30a132e912787e50de6193fe56a96ea6188c0bbf676679d630a25d3293c3e19addf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef035adf3bbe16b317cf4a3e05c966ea6571d1af00147c5f121bd1514b1e322a06a2646970667358221220fa2a0e00764f04e72a375d99cedae866ea080b7f90c61b75fe2002ef1411364e64736f6c63430008150033";

type LensHandlesConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LensHandlesConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class LensHandles__factory extends ContractFactory {
  constructor(...args: LensHandlesConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    owner: string,
    lensHub: string,
    tokenGuardianCooldown: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<LensHandles> {
    return super.deploy(
      owner,
      lensHub,
      tokenGuardianCooldown,
      overrides || {}
    ) as Promise<LensHandles>;
  }
  getDeployTransaction(
    owner: string,
    lensHub: string,
    tokenGuardianCooldown: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      owner,
      lensHub,
      tokenGuardianCooldown,
      overrides || {}
    );
  }
  attach(address: string): LensHandles {
    return super.attach(address) as LensHandles;
  }
  connect(signer: Signer): LensHandles__factory {
    return super.connect(signer) as LensHandles__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LensHandlesInterface {
    return new utils.Interface(_abi) as LensHandlesInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): LensHandles {
    return new Contract(address, _abi, signerOrProvider) as LensHandles;
  }
}
